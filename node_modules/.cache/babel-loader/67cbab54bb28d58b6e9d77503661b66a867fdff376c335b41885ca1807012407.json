{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\REACTHOSP\\\\demo\\\\src\\\\User\\\\Doctorlist\\\\doctorlist.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  // Sample data for doctors (replace it with your actual data)\n  const doctors = [{\n    id: 1,\n    name: 'Dr. John Doe',\n    image: 'doctor1.jpg',\n    // Replace with the path to the doctor's image\n    category: 'Cardiologist',\n    availableTime: 'Mon - Fri, 9:00 AM - 5:00 PM'\n  }, {\n    id: 2,\n    name: 'Dr. Jane Smith',\n    image: 'doctor2.jpg',\n    // Replace with the path to the doctor's image\n    category: 'Pediatrician',\n    availableTime: 'Tue - Sat, 10:00 AM - 6:00 PM'\n  }\n  // Add more doctors as needed\n  ];\n\n  // Function to render a single card for a doctor\n  const renderDoctorCard = doctor => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: doctor.image,\n        alt: doctor.name,\n        style: imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: doctor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: doctor.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: doctor.availableTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        children: \"Book Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, doctor.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to render a row of doctor cards\n  const renderDoctorRow = (startIdx, endIdx) => {\n    const rowStyle = {\n      display: 'flex',\n      justifyContent: 'space-around',\n      marginBottom: '20px'\n    };\n    const rowCards = doctors.slice(startIdx, endIdx).map(renderDoctorCard);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rowStyle,\n      children: rowCards\n    }, startIdx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Render the entire list of doctors in rows of cards\n  const renderDoctorList = () => {\n    const rowSize = 3;\n    const rows = [];\n    for (let i = 0; i < doctors.length; i += rowSize) {\n      rows.push(renderDoctorRow(i, i + rowSize));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Styles\n  const cardStyle = {\n    border: '1px solid #ccc',\n    padding: '20px',\n    textAlign: 'center',\n    width: '250px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n  };\n  const imageStyle = {\n    width: '100%',\n    borderRadius: '50%',\n    marginBottom: '10px'\n  };\n  const buttonStyle = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), renderDoctorList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DoctorList","doctors","id","name","image","category","availableTime","renderDoctorCard","doctor","style","cardStyle","children","src","alt","imageStyle","fileName","_jsxFileName","lineNumber","columnNumber","buttonStyle","renderDoctorRow","startIdx","endIdx","rowStyle","display","justifyContent","marginBottom","rowCards","slice","map","renderDoctorList","rowSize","rows","i","length","push","border","padding","textAlign","width","boxShadow","borderRadius","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/REACTHOSP/demo/src/User/Doctorlist/doctorlist.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DoctorList = () => {\r\n  // Sample data for doctors (replace it with your actual data)\r\n  const doctors = [\r\n    {\r\n      id: 1,\r\n      name: 'Dr. John Doe',\r\n      image: 'doctor1.jpg', // Replace with the path to the doctor's image\r\n      category: 'Cardiologist',\r\n      availableTime: 'Mon - Fri, 9:00 AM - 5:00 PM',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dr. Jane Smith',\r\n      image: 'doctor2.jpg', // Replace with the path to the doctor's image\r\n      category: 'Pediatrician',\r\n      availableTime: 'Tue - Sat, 10:00 AM - 6:00 PM',\r\n    },\r\n    // Add more doctors as needed\r\n  ];\r\n\r\n  // Function to render a single card for a doctor\r\n  const renderDoctorCard = (doctor) => {\r\n    return (\r\n      <div key={doctor.id} style={cardStyle}>\r\n        <img src={doctor.image} alt={doctor.name} style={imageStyle} />\r\n        <h3>{doctor.name}</h3>\r\n        <p>{doctor.category}</p>\r\n        <p>{doctor.availableTime}</p>\r\n        <button style={buttonStyle}>Book Now</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Function to render a row of doctor cards\r\n  const renderDoctorRow = (startIdx, endIdx) => {\r\n    const rowStyle = {\r\n      display: 'flex',\r\n      justifyContent: 'space-around',\r\n      marginBottom: '20px',\r\n    };\r\n\r\n    const rowCards = doctors.slice(startIdx, endIdx).map(renderDoctorCard);\r\n\r\n    return <div key={startIdx} style={rowStyle}>{rowCards}</div>;\r\n  };\r\n\r\n  // Render the entire list of doctors in rows of cards\r\n  const renderDoctorList = () => {\r\n    const rowSize = 3;\r\n    const rows = [];\r\n\r\n    for (let i = 0; i < doctors.length; i += rowSize) {\r\n      rows.push(renderDoctorRow(i, i + rowSize));\r\n    }\r\n\r\n    return <div>{rows}</div>;\r\n  };\r\n\r\n  // Styles\r\n  const cardStyle = {\r\n    border: '1px solid #ccc',\r\n    padding: '20px',\r\n    textAlign: 'center',\r\n    width: '250px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  };\r\n\r\n  const imageStyle = {\r\n    width: '100%',\r\n    borderRadius: '50%',\r\n    marginBottom: '10px',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    padding: '10px',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor List</h2>\r\n      {renderDoctorList()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}