{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\Mern-food\\\\frontend\\\\demo\\\\src\\\\doctor\\\\Doctorogin\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport react, { useState, useEffect } from \"react\";\nimport \"./DoctorLogin.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axios from \"axios\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DoctorLogin = () => {\n  _s();\n  const [email, changeemail] = useState(\"\");\n  const [password, changepassword] = useState(\"\");\n  const [role, changerole] = useState(\"\");\n  const [setError, changeError] = useState(null);\n  const navigate = useNavigate(\"\");\n  const [userdetails, ChangeUsrdetails] = useState({\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [onRecaptchaChange, changeonRecaptchaChange] = useState(false);\n  // const [erifyCap,changeerifyCap]=useState(false)\n\n  useEffect(() => {\n    console.log(role, \".........\");\n  }, [onRecaptchaChange, userdetails, email, password, role]);\n  const checkMail = data => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(data);\n    return isValid;\n  };\n\n  // console.log(checkMail(\"doctor@gmail.com\"),\"checking mail\");\n\n  const call = () => {\n    console.log(\"call\");\n    const data = {\n      email: email,\n      password: password,\n      role: \"Doctor\"\n    };\n    console.log(data.role === userdetails.role);\n    console.log(userdetails.role, \"rr\", data.role, \"ttt\");\n    console.log(data.role, \"<\", userdetails.role, \"<\");\n    console.log(userdetails.email, \"rr\", data.email, \"ttt\");\n    console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\n    if (data.role === userdetails.role) {\n      console.log(userdetails.role, \"rr\", data.role, \"ttt\");\n      if (data.email === userdetails.email) {\n        console.log(userdetails.email, \"rr\", data.email, \"ttt\");\n        console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\n        if (data.password === userdetails.password) {\n          navigate(\"/DoctorAppointment\");\n          //  console.log(\"login successfully\");\n        } else {\n          changeError(\"INVALID PASSWORD\");\n          setTimeout(hideSpam, 1000);\n        }\n      } else {\n        changeError(\"INVALID EMAIL\");\n        setTimeout(hideSpam, 1000);\n      }\n    } else {\n      if (data.role != \"Doctor\") {\n        changeError(\"INVALID ROLE\");\n        setTimeout(hideSpam, 1000);\n      }\n    }\n  };\n  const login = async () => {\n    console.log(\"login\");\n    const data = {\n      email: email,\n      password: password,\n      role: \"Doctor\"\n    };\n    if (onRecaptchaChange) {\n      console.log(checkMail(email));\n      if (checkMail(email)) {\n        if (password.length >= 5) {\n          await axios.post(\"http://localhost:1111/officialEmail/\", data).then(response => {\n            console.log(response.data);\n            changerole(response.data.role);\n            ChangeUsrdetails({\n              email: response.data.email,\n              password: response.data.password,\n              role: response.data.role\n            });\n            call();\n          }).catch(error => {\n            changeError(\"INVALID USER\");\n            setTimeout(hideSpam, 1000);\n            console.error(\"Error:\", error);\n          });\n        } else {\n          // console.log(\"WRONG PASSWORD\");\n          changeError(\"5 CHARACTER NEED PASSWORD\");\n          setTimeout(hideSpam, 1000);\n        }\n      } else {\n        // console.log();\n        changeError(\"ENTER PROPER EMAIL\");\n        setTimeout(hideSpam, 1000);\n      }\n    } else {\n      changeError(\"VERIFY CAPTCHA\");\n      setTimeout(hideSpam, 1000);\n    }\n  };\n  const hideSpam = () => {\n    // setShowSpam(false);\n    changeError(null);\n  };\n\n  // Set a timeout to hide the spam message after 5 seconds\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lcontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => changeemail(e.target.value),\n          placeholder: \"Enter value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Password\",\n          value: password,\n          onChange: e => changepassword(e.target.value),\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/DoctorForgotPassword\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fpass\",\n            children: \"forgot password ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          className: \"ReCAPTCHA\",\n          sitekey: \"6Lf7eyQpAAAAABP44pO0L6bvtrOV5FnLLk1kGIrR\",\n          onChange: () => changeonRecaptchaChange(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/DoctorRegister\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"register\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), setError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DoctorLogin, \"G7c96EU0qN4Mgv210wvJ0CsXABY=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["react","useState","useEffect","ReCAPTCHA","axios","Routes","Route","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorLogin","_s","email","changeemail","password","changepassword","role","changerole","setError","changeError","navigate","userdetails","ChangeUsrdetails","onRecaptchaChange","changeonRecaptchaChange","console","log","checkMail","data","emailRegex","isValid","test","call","setTimeout","hideSpam","login","length","post","then","response","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","to","sitekey","onClick","class","_c","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/Mern-food/frontend/demo/src/doctor/Doctorogin/DoctorLogin.js"],"sourcesContent":["import react, { useState, useEffect } from \"react\";\r\nimport \"./DoctorLogin.css\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from \"axios\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const DoctorLogin = () => {\r\n  const [email, changeemail] = useState(\"\");\r\n  const [password, changepassword] = useState(\"\");\r\n  const [role, changerole] = useState(\"\");\r\n  const [setError, changeError] = useState(null);\r\n  const navigate = useNavigate(\"\");\r\n  const [userdetails, ChangeUsrdetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    role: \"\",\r\n  });\r\n  const [onRecaptchaChange, changeonRecaptchaChange] = useState(false);\r\n  // const [erifyCap,changeerifyCap]=useState(false)\r\n\r\n  useEffect(() => {\r\n    console.log(role, \".........\");\r\n  }, [onRecaptchaChange, userdetails, email, password, role]);\r\n\r\n  const checkMail = (data) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const isValid = emailRegex.test(data);\r\n    return isValid;\r\n  };\r\n\r\n  // console.log(checkMail(\"doctor@gmail.com\"),\"checking mail\");\r\n\r\n  const call = () => {\r\n    console.log(\"call\");\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n      role: \"Doctor\",\r\n    };\r\n    console.log(data.role === userdetails.role);\r\n    console.log(userdetails.role, \"rr\", data.role, \"ttt\");\r\n    console.log(data.role, \"<\", userdetails.role, \"<\");\r\n    console.log(userdetails.email, \"rr\", data.email, \"ttt\");\r\n    console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\r\n    if (data.role === userdetails.role) {\r\n      console.log(userdetails.role, \"rr\", data.role, \"ttt\");\r\n      if (data.email === userdetails.email) {\r\n        console.log(userdetails.email, \"rr\", data.email, \"ttt\");\r\n        console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\r\n        if (data.password === userdetails.password) {\r\n          navigate(\"/DoctorAppointment\");\r\n          //  console.log(\"login successfully\");\r\n        } else {\r\n          changeError(\"INVALID PASSWORD\");\r\n          setTimeout(hideSpam, 1000);\r\n        }\r\n      } else {\r\n        changeError(\"INVALID EMAIL\");\r\n        setTimeout(hideSpam, 1000);\r\n      }\r\n    } else {\r\n      if (data.role != \"Doctor\") {\r\n        changeError(\"INVALID ROLE\");\r\n        setTimeout(hideSpam, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    console.log(\"login\");\r\n\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n      role: \"Doctor\",\r\n    };\r\n\r\n    if (onRecaptchaChange) {\r\n      console.log(checkMail(email));\r\n      if (checkMail(email)) {\r\n        if (password.length >= 5) {\r\n          await axios\r\n            .post(\"http://localhost:1111/officialEmail/\", data)\r\n            .then((response) => {\r\n              console.log(response.data);\r\n              changerole(response.data.role);\r\n              ChangeUsrdetails({\r\n                email: response.data.email,\r\n                password: response.data.password,\r\n                role: response.data.role,\r\n              });\r\n              call();\r\n            })\r\n            .catch((error) => {\r\n              changeError(\"INVALID USER\");\r\n              setTimeout(hideSpam, 1000);\r\n              console.error(\"Error:\", error);\r\n            });\r\n        } else {\r\n          // console.log(\"WRONG PASSWORD\");\r\n          changeError(\"5 CHARACTER NEED PASSWORD\");\r\n          setTimeout(hideSpam, 1000);\r\n        }\r\n      } else {\r\n        // console.log();\r\n        changeError(\"ENTER PROPER EMAIL\");\r\n        setTimeout(hideSpam, 1000);\r\n      }\r\n    } else {\r\n      changeError(\"VERIFY CAPTCHA\");\r\n      setTimeout(hideSpam, 1000);\r\n    }\r\n  };\r\n\r\n  const hideSpam = () => {\r\n    // setShowSpam(false);\r\n    changeError(null);\r\n  };\r\n\r\n  // Set a timeout to hide the spam message after 5 seconds\r\n\r\n  return (\r\n    <>\r\n      <div className=\"lcontainer\">\r\n        <div className=\"login\">\r\n          <h1>LOGIN</h1>\r\n\r\n          <p>Email</p>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => changeemail(e.target.value)}\r\n            placeholder=\"Enter value\"\r\n          ></input>\r\n\r\n          <p>Password</p>\r\n          <input\r\n            type=\"Password\"\r\n            value={password}\r\n            onChange={(e) => changepassword(e.target.value)}\r\n            placeholder=\"Enter Password\"\r\n          ></input>\r\n          <Link to=\"/DoctorForgotPassword\">\r\n            <p className=\"fpass\">forgot password ?</p>\r\n          </Link>\r\n          <ReCAPTCHA\r\n            className=\"ReCAPTCHA\"\r\n            sitekey=\"6Lf7eyQpAAAAABP44pO0L6bvtrOV5FnLLk1kGIrR\"\r\n            onChange={() => changeonRecaptchaChange(true)}\r\n          />\r\n\r\n          <div className=\"div1\">\r\n            <button onClick={login}>Login</button>\r\n            <Link to=\"/DoctorRegister\">\r\n              <button class=\"register\">Register</button>\r\n            </Link>\r\n          </div>\r\n          {setError ? <p className=\"error\">{setError}</p> : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}