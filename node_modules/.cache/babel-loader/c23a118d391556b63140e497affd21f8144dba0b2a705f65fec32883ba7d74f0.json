{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\REACTHOSP\\\\demo\\\\src\\\\doctor\\\\DocterChat\\\\DocterChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navigation } from \"../navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DoctorChat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    // Simulate patient's initial message when the page loads\n    const initialMessage = {\n      sender: \"patient\",\n      text: \"Are you available today?\"\n    };\n    setMessages([initialMessage]);\n\n    // Set a timer for auto patient follow-up message if doctor doesn't reply in 5 seconds\n    const followUpTimer = setTimeout(() => {\n      const followUpMessage = {\n        sender: \"patient\",\n        text: \"Are you there?\"\n      };\n      setMessages([...messages, followUpMessage]);\n    }, 5000);\n    return () => clearTimeout(followUpTimer); // Clear the timer on component unmount\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim() === \"\") return;\n    const updatedMessages = [...messages, {\n      sender: \"patient\",\n      text: newMessage\n    }];\n    setMessages(updatedMessages);\n    setNewMessage(\"\");\n\n    // Simulate doctor's reply after 2 seconds\n    setTimeout(() => {\n      const doctorReply = {\n        sender: \"doctor\",\n        text: \"Yes, I'm available today. How can I help you?\"\n      };\n      setMessages([...updatedMessages, doctorReply]);\n\n      // Simulate patient's auto-reply after 2 seconds\n      setTimeout(() => {\n        const patientAutoReply = {\n          sender: \"patient\",\n          text: \"Thank you. I will connect with you after one week.\"\n        };\n        setMessages([...updatedMessages, doctorReply, patientAutoReply]);\n      }, 2000);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.heading,\n        children: \"Chat with Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.centeredBox,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chatBox,\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.messageContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: message.sender === \"patient\" ? styles.youLabel : styles.doctorLabel,\n              children: message.sender === \"patient\" ? \"You:\" : \"Doctor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.messageText,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          cols: \"50\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          style: styles.textArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          style: styles.button,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorChat, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = DoctorChat;\nconst styles = {\n  container: {\n    padding: \"20px\",\n    backgroundColor: \"#87CEEB\" // SkyBlue background color\n  },\n  heading: {\n    fontSize: \"24px\",\n    marginBottom: \"20px\",\n    color: \"#4169E1\" // RoyalBlue text color\n  },\n  centeredBox: {\n    width: \"80%\",\n    margin: \"0 auto\"\n  },\n  chatBox: {\n    border: \"1px solid #ccc\",\n    boxShadow: \"0 0 90px rgba(0, 0, 255, 0.5)\",\n    // Blue shadow\n    backgroundColor: \"#87CEEB\",\n    minHeight: \"200px\",\n    padding: \"10px\",\n    marginBottom: \"20px\",\n    overflowY: \"auto\"\n  },\n  messageContainer: {\n    width: \"80%\",\n    margin: \"0 auto\"\n  },\n  patientLabel: {\n    fontWeight: \"bold\",\n    color: \"#1E90FF\" // DodgerBlue text color\n  },\n  doctorLabel: {\n    fontWeight: \"bold\",\n    color: \"#008080\" // Teal text color\n  },\n  messageText: {\n    margin: 0,\n    paddingLeft: \"10px\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  textArea: {\n    width: \"80%\",\n    margin: \"0 auto\",\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\"\n  },\n  button: {\n    padding: \"10px\",\n    textAlign: \"center\",\n    backgroundColor: \"#008080\",\n    // Teal button color\n    color: \"#fff\",\n    cursor: \"pointer\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    margin: \"0 auto\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"DoctorChat\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorChat","_s","messages","setMessages","newMessage","setNewMessage","initialMessage","sender","text","followUpTimer","setTimeout","followUpMessage","clearTimeout","handleSendMessage","trim","updatedMessages","doctorReply","patientAutoReply","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","heading","centeredBox","chatBox","map","message","index","messageContainer","youLabel","doctorLabel","messageText","inputContainer","rows","cols","value","onChange","e","target","placeholder","textArea","onClick","button","_c","padding","backgroundColor","fontSize","marginBottom","color","width","margin","border","boxShadow","minHeight","overflowY","patientLabel","fontWeight","paddingLeft","display","flexDirection","textAlign","cursor","borderRadius","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/REACTHOSP/demo/src/doctor/DocterChat/DocterChat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"../navigation\";\r\n\r\nexport const DoctorChat=()=>{\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Simulate patient's initial message when the page loads\r\n    const initialMessage = {\r\n      sender: \"patient\",\r\n      text: \"Are you available today?\",\r\n    };\r\n    setMessages([initialMessage]);\r\n\r\n    // Set a timer for auto patient follow-up message if doctor doesn't reply in 5 seconds\r\n    const followUpTimer = setTimeout(() => {\r\n      const followUpMessage = {\r\n        sender: \"patient\",\r\n        text: \"Are you there?\",\r\n      };\r\n      setMessages([...messages, followUpMessage]);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(followUpTimer); // Clear the timer on component unmount\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim() === \"\") return;\r\n\r\n    const updatedMessages = [\r\n      ...messages,\r\n      { sender: \"patient\", text: newMessage },\r\n    ];\r\n    setMessages(updatedMessages);\r\n    setNewMessage(\"\");\r\n\r\n    // Simulate doctor's reply after 2 seconds\r\n    setTimeout(() => {\r\n      const doctorReply = {\r\n        sender: \"doctor\",\r\n        text: \"Yes, I'm available today. How can I help you?\",\r\n      };\r\n      setMessages([...updatedMessages, doctorReply]);\r\n\r\n      // Simulate patient's auto-reply after 2 seconds\r\n      setTimeout(() => {\r\n        const patientAutoReply = {\r\n          sender: \"patient\",\r\n          text: \"Thank you. I will connect with you after one week.\",\r\n        };\r\n        setMessages([...updatedMessages, doctorReply, patientAutoReply]);\r\n      }, 2000);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div style={styles.container}>\r\n        <h1 style={styles.heading}>Chat with Doctor</h1>\r\n\r\n        <div style={styles.centeredBox}>\r\n          <div style={styles.chatBox}>\r\n            {messages.map((message, index) => (\r\n              <div key={index} style={styles.messageContainer}>\r\n                <span\r\n                  style={\r\n                    message.sender === \"patient\"\r\n                      ? styles.youLabel\r\n                      : styles.doctorLabel\r\n                  }\r\n                >\r\n                  {message.sender === \"patient\" ? \"You:\" : \"Doctor:\"}\r\n                </span>\r\n                <p style={styles.messageText}>{message.text}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={styles.inputContainer}>\r\n          <textarea\r\n            rows=\"4\"\r\n            cols=\"50\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            style={styles.textArea}\r\n          ></textarea>\r\n          <br />\r\n          <button onClick={handleSendMessage} style={styles.button}>\r\n            Send Message\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n  \r\n  const styles = {\r\n    container: {\r\n      padding: \"20px\",\r\n      backgroundColor: \"#87CEEB\", // SkyBlue background color\r\n    },\r\n    heading: {\r\n      fontSize: \"24px\",\r\n      marginBottom: \"20px\",\r\n      color: \"#4169E1\", // RoyalBlue text color\r\n    },\r\n    centeredBox: {\r\n      width: \"80%\",\r\n      margin: \"0 auto\",\r\n    },\r\n    chatBox: {\r\n      border: \"1px solid #ccc\",\r\n      boxShadow: \"0 0 90px rgba(0, 0, 255, 0.5)\", // Blue shadow\r\n      backgroundColor: \"#87CEEB\",\r\n      minHeight: \"200px\",\r\n      padding: \"10px\",\r\n      marginBottom: \"20px\",\r\n      overflowY: \"auto\",\r\n    },\r\n    messageContainer: {\r\n      width: \"80%\",\r\n      margin: \"0 auto\",\r\n    },\r\n    patientLabel: {\r\n      fontWeight: \"bold\",\r\n      color: \"#1E90FF\", // DodgerBlue text color\r\n    },\r\n    doctorLabel: {\r\n      fontWeight: \"bold\",\r\n      color: \"#008080\", // Teal text color\r\n    },\r\n    messageText: {\r\n      margin: 0,\r\n      paddingLeft: \"10px\",\r\n    },\r\n    inputContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    textArea: {\r\n      width: \"80%\",\r\n      margin: \"0 auto\",\r\n      marginBottom: \"10px\",\r\n      padding: \"10px\",\r\n      boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\",\r\n    },\r\n    button: {\r\n      padding: \"10px\",\r\n      textAlign: \"center\",\r\n      backgroundColor: \"#008080\", // Teal button color\r\n      color: \"#fff\",\r\n      cursor: \"pointer\",\r\n      border: \"none\",\r\n      borderRadius: \"4px\",\r\n      margin: \"0 auto\",\r\n    },\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}