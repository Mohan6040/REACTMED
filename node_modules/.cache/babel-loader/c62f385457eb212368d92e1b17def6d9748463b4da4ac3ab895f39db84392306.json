{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\REACTHOSP\\\\demo\\\\src\\\\doctor\\\\DocterChat\\\\DocterChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Navigation } from \"../navigation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComments } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DoctorChat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [chatEnded, setChatEnded] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  useEffect(() => {\n    if (isChatOpen) {\n      // Simulate patient's initial auto-message when the page loads\n      setTimeout(() => {\n        const patientAutoMessage = {\n          sender: \"patient\",\n          text: \"Are you available?\"\n        };\n        setMessages([patientAutoMessage]);\n      }, 1000); // Adjust the timing as needed\n    }\n  }, [isChatOpen]);\n  const handleSendMessage = () => {\n    if (chatEnded || newMessage.trim() === \"\") {\n      // If the chat has ended or the message is empty, do nothing\n      return;\n    }\n\n    // Simulate doctor's manual reply\n    const updatedMessages = [...messages, {\n      sender: \"doctor\",\n      text: newMessage\n    }];\n    setMessages(updatedMessages);\n    setNewMessage(\"\");\n\n    // Simulate patient's auto-reply after 5 seconds\n    setTimeout(() => {\n      const patientAutoReply = {\n        sender: \"patient\",\n        text: \"Thank you for your response.\"\n      };\n      setMessages(prevMessages => [...prevMessages, patientAutoReply]);\n\n      // Simulate doctor's reply after 3 seconds\n      setTimeout(() => {\n        const doctorEndingMessage = {\n          sender: \"doctor\",\n          text: \"Thank you for contacting me and Chat with me after 3 days.\"\n        };\n        setMessages(prevMessages => [...prevMessages, doctorEndingMessage]);\n\n        // Set the chat to be ended\n        setChatEnded(true);\n      }, 2000);\n    }, 5000);\n  };\n  const toggleChat = () => {\n    setIsChatOpen(prevIsChatOpen => !prevIsChatOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.pageContainer,\n      children: [isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.heading,\n          children: \"Chat with Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.centeredBox,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.chatBox,\n            children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.messageContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: message.sender === \"patient\" ? styles.youLabel : styles.doctorLabel,\n                children: message.sender === \"patient\" ? \"You:\" : \"Doctor:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: styles.messageText,\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            style: styles.textArea,\n            disabled: chatEnded // Disable textarea when chat has ended\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            style: styles.button,\n            disabled: chatEnded,\n            children: \"Send Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chatIcon,\n        onClick: toggleChat,\n        className: isChatOpen ? \"open\" : \"\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DoctorChat, \"NCuSuco8ItyGxmntmBo9QWOGSEs=\");\n_c = DoctorChat;\nconst styles = {\n  pageContainer: {\n    backgroundColor: \"#ADD8E6\",\n    // Blue-yellow mixed color\n    minHeight: \"100vh\",\n    // Full height of the viewport\n    position: \"relative\"\n  },\n  container: {\n    padding: \"20px\",\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  heading: {\n    fontSize: \"34px\",\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  centeredBox: {\n    width: \"80%\",\n    margin: \"0 auto\" // Center the box horizontally\n  },\n  chatBox: {\n    border: \"1px solid #ccc\",\n    boxShadow: \"10px 20px 30px #000000\",\n    // Red shadow\n    backgroundColor: \"#ADD8E6\",\n    // Light blue-green background color\n    minHeight: \"200px\",\n    marginLeft: \"15%\",\n    padding: \"5px\",\n    width: \"70%\",\n    marginBottom: \"20px\",\n    overflowY: \"auto\"\n  },\n  messageContainer: {\n    width: \"80%\",\n    margin: \"0 auto\" // Center the message container\n  },\n  youLabel: {\n    fontWeight: \"bold\",\n    color: \"#2196F3\"\n  },\n  doctorLabel: {\n    fontWeight: \"bold\",\n    color: \"#4CAF50\"\n  },\n  messageText: {\n    margin: 0,\n    paddingLeft: \"10px\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  textArea: {\n    width: \"60%\",\n    // Set the width to match the chat box\n    margin: \"0 auto\",\n    // Center the text area\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\" // Subtle shadow\n  },\n  button: {\n    width: \"20%\",\n    // Set the width to match the chat box\n    margin: \"0 auto\",\n    // Center the button\n    textAlign: \"center\",\n    backgroundColor: \"#4CAF50\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    border: \"none\",\n    borderRadius: \"4px\"\n  },\n  chatIcon: {\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: \"20px\",\n    backgroundColor: \"#4CAF50\",\n    color: \"#fff\",\n    borderRadius: \"50%\",\n    padding: \"10px\",\n    fontSize: \"24px\",\n    cursor: \"pointer\",\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\",\n    // Subtle shadow\n    transition: \"background-color 0.3s ease\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"DoctorChat\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","FontAwesomeIcon","faComments","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorChat","_s","messages","setMessages","newMessage","setNewMessage","chatEnded","setChatEnded","isChatOpen","setIsChatOpen","setTimeout","patientAutoMessage","sender","text","handleSendMessage","trim","updatedMessages","patientAutoReply","prevMessages","doctorEndingMessage","toggleChat","prevIsChatOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","pageContainer","container","heading","centeredBox","chatBox","map","message","index","messageContainer","youLabel","doctorLabel","messageText","inputContainer","rows","cols","value","onChange","e","target","placeholder","textArea","disabled","onClick","button","chatIcon","className","icon","_c","backgroundColor","minHeight","position","padding","top","left","width","height","fontSize","textAlign","marginBottom","margin","border","boxShadow","marginLeft","overflowY","fontWeight","color","paddingLeft","display","flexDirection","cursor","borderRadius","bottom","right","transition","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/REACTHOSP/demo/src/doctor/DocterChat/DocterChat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"../navigation\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faComments } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DoctorChat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [chatEnded, setChatEnded] = useState(false);\r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isChatOpen) {\r\n      // Simulate patient's initial auto-message when the page loads\r\n      setTimeout(() => {\r\n        const patientAutoMessage = {\r\n          sender: \"patient\",\r\n          text: \"Are you available?\",\r\n        };\r\n        setMessages([patientAutoMessage]);\r\n      }, 1000); // Adjust the timing as needed\r\n    }\r\n  }, [isChatOpen]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (chatEnded || newMessage.trim() === \"\") {\r\n      // If the chat has ended or the message is empty, do nothing\r\n      return;\r\n    }\r\n\r\n    // Simulate doctor's manual reply\r\n    const updatedMessages = [\r\n      ...messages,\r\n      { sender: \"doctor\", text: newMessage },\r\n    ];\r\n    setMessages(updatedMessages);\r\n    setNewMessage(\"\");\r\n\r\n    // Simulate patient's auto-reply after 5 seconds\r\n    setTimeout(() => {\r\n      const patientAutoReply = {\r\n        sender: \"patient\",\r\n        text: \"Thank you for your response.\",\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, patientAutoReply]);\r\n\r\n      // Simulate doctor's reply after 3 seconds\r\n      setTimeout(() => {\r\n        const doctorEndingMessage = {\r\n          sender: \"doctor\",\r\n          text: \"Thank you for contacting me and Chat with me after 3 days.\",\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, doctorEndingMessage]);\r\n\r\n        // Set the chat to be ended\r\n        setChatEnded(true);\r\n      }, 2000);\r\n    }, 5000);\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen((prevIsChatOpen) => !prevIsChatOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div style={styles.pageContainer}>\r\n        {isChatOpen && (\r\n          <div style={styles.container}>\r\n            <h1 style={styles.heading}>Chat with Doctor</h1>\r\n\r\n            <div style={styles.centeredBox}>\r\n              <div style={styles.chatBox}>\r\n                {messages.map((message, index) => (\r\n                  <div key={index} style={styles.messageContainer}>\r\n                    <span\r\n                      style={\r\n                        message.sender === \"patient\"\r\n                          ? styles.youLabel\r\n                          : styles.doctorLabel\r\n                      }\r\n                    >\r\n                      {message.sender === \"patient\" ? \"You:\" : \"Doctor:\"}\r\n                    </span>\r\n                    <p style={styles.messageText}>{message.text}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.inputContainer}>\r\n              <textarea\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n                style={styles.textArea}\r\n                disabled={chatEnded} // Disable textarea when chat has ended\r\n              ></textarea>\r\n              <br />\r\n              <button\r\n                onClick={handleSendMessage}\r\n                style={styles.button}\r\n                disabled={chatEnded}\r\n              >\r\n                Send Message\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          style={styles.chatIcon}\r\n          onClick={toggleChat}\r\n          className={isChatOpen ? \"open\" : \"\"}\r\n        >\r\n          <FontAwesomeIcon icon={faComments} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  pageContainer: {\r\n    backgroundColor: \"#ADD8E6\", // Blue-yellow mixed color\r\n    minHeight: \"100vh\", // Full height of the viewport\r\n    position: \"relative\",\r\n  },\r\n  container: {\r\n    padding: \"20px\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: \"34px\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  centeredBox: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\", // Center the box horizontally\r\n  },\r\n  chatBox: {\r\n    border: \"1px solid #ccc\",\r\n    boxShadow: \"10px 20px 30px #000000\", // Red shadow\r\n    backgroundColor: \"#ADD8E6\", // Light blue-green background color\r\n    minHeight: \"200px\",\r\n    marginLeft: \"15%\",\r\n    padding: \"5px\",\r\n    width: \"70%\",\r\n    marginBottom: \"20px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  messageContainer: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\", // Center the message container\r\n  },\r\n  youLabel: {\r\n    fontWeight: \"bold\",\r\n    color: \"#2196F3\",\r\n  },\r\n  doctorLabel: {\r\n    fontWeight: \"bold\",\r\n    color: \"#4CAF50\",\r\n  },\r\n  messageText: {\r\n    margin: 0,\r\n    paddingLeft: \"10px\",\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  textArea: {\r\n    width: \"60%\", // Set the width to match the chat box\r\n    margin: \"0 auto\", // Center the text area\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\", // Subtle shadow\r\n  },\r\n  button: {\r\n    width: \"20%\", // Set the width to match the chat box\r\n    margin: \"0 auto\", // Center the button\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#4CAF50\",\r\n    color: \"#fff\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  chatIcon: {\r\n    position: \"fixed\",\r\n    bottom: \"20px\",\r\n    right: \"20px\",\r\n    backgroundColor: \"#4CAF50\",\r\n    color: \"#fff\",\r\n    borderRadius: \"50%\",\r\n    padding: \"10px\",\r\n    fontSize: \"24px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.2)\", // Subtle shadow\r\n    transition: \"background-color 0.3s ease\",\r\n  },\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,IAAIgB,UAAU,EAAE;MACd;MACAE,UAAU,CAAC,MAAM;QACf,MAAMC,kBAAkB,GAAG;UACzBC,MAAM,EAAE,SAAS;UACjBC,IAAI,EAAE;QACR,CAAC;QACDV,WAAW,CAAC,CAACQ,kBAAkB,CAAC,CAAC;MACnC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,SAAS,IAAIF,UAAU,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzC;MACA;IACF;;IAEA;IACA,MAAMC,eAAe,GAAG,CACtB,GAAGd,QAAQ,EACX;MAAEU,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAET;IAAW,CAAC,CACvC;IACDD,WAAW,CAACa,eAAe,CAAC;IAC5BX,aAAa,CAAC,EAAE,CAAC;;IAEjB;IACAK,UAAU,CAAC,MAAM;MACf,MAAMO,gBAAgB,GAAG;QACvBL,MAAM,EAAE,SAAS;QACjBC,IAAI,EAAE;MACR,CAAC;MACDV,WAAW,CAAEe,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,gBAAgB,CAAC,CAAC;;MAElE;MACAP,UAAU,CAAC,MAAM;QACf,MAAMS,mBAAmB,GAAG;UAC1BP,MAAM,EAAE,QAAQ;UAChBC,IAAI,EAAE;QACR,CAAC;QACDV,WAAW,CAAEe,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEC,mBAAmB,CAAC,CAAC;;QAErE;QACAZ,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBX,aAAa,CAAEY,cAAc,IAAK,CAACA,cAAc,CAAC;EACpD,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACJ,UAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACd7B,OAAA;MAAK8B,KAAK,EAAEC,MAAM,CAACC,aAAc;MAAAP,QAAA,GAC9Bd,UAAU,iBACTX,OAAA;QAAK8B,KAAK,EAAEC,MAAM,CAACE,SAAU;QAAAR,QAAA,gBAC3BzB,OAAA;UAAI8B,KAAK,EAAEC,MAAM,CAACG,OAAQ;UAAAT,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEhD7B,OAAA;UAAK8B,KAAK,EAAEC,MAAM,CAACI,WAAY;UAAAV,QAAA,eAC7BzB,OAAA;YAAK8B,KAAK,EAAEC,MAAM,CAACK,OAAQ;YAAAX,QAAA,EACxBpB,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BvC,OAAA;cAAiB8B,KAAK,EAAEC,MAAM,CAACS,gBAAiB;cAAAf,QAAA,gBAC9CzB,OAAA;gBACE8B,KAAK,EACHQ,OAAO,CAACvB,MAAM,KAAK,SAAS,GACxBgB,MAAM,CAACU,QAAQ,GACfV,MAAM,CAACW,WACZ;gBAAAjB,QAAA,EAEAa,OAAO,CAACvB,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG;cAAS;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACP7B,OAAA;gBAAG8B,KAAK,EAAEC,MAAM,CAACY,WAAY;gBAAAlB,QAAA,EAAEa,OAAO,CAACtB;cAAI;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GAVxCU,KAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN7B,OAAA;UAAK8B,KAAK,EAAEC,MAAM,CAACa,cAAe;UAAAnB,QAAA,gBAChCzB,OAAA;YACE6C,IAAI,EAAC,GAAG;YACRC,IAAI,EAAC,IAAI;YACTC,KAAK,EAAExC,UAAW;YAClByC,QAAQ,EAAGC,CAAC,IAAKzC,aAAa,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,sBAAsB;YAClCrB,KAAK,EAAEC,MAAM,CAACqB,QAAS;YACvBC,QAAQ,EAAE5C,SAAU,CAAC;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACZ7B,OAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN7B,OAAA;YACEsD,OAAO,EAAErC,iBAAkB;YAC3Ba,KAAK,EAAEC,MAAM,CAACwB,MAAO;YACrBF,QAAQ,EAAE5C,SAAU;YAAAgB,QAAA,EACrB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED7B,OAAA;QACE8B,KAAK,EAAEC,MAAM,CAACyB,QAAS;QACvBF,OAAO,EAAE/B,UAAW;QACpBkC,SAAS,EAAE9C,UAAU,GAAG,MAAM,GAAG,EAAG;QAAAc,QAAA,eAEpCzB,OAAA,CAACH,eAAe;UAAC6D,IAAI,EAAE5D;QAAW;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACzB,EAAA,CAtHWD,UAAU;AAAAwD,EAAA,GAAVxD,UAAU;AAwHvB,MAAM4B,MAAM,GAAG;EACbC,aAAa,EAAE;IACb4B,eAAe,EAAE,SAAS;IAAE;IAC5BC,SAAS,EAAE,OAAO;IAAE;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACD7B,SAAS,EAAE;IACT8B,OAAO,EAAE,MAAM;IACfD,QAAQ,EAAE,UAAU;IACpBE,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,GAAG;IACTC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDjC,OAAO,EAAE;IACPkC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDnC,WAAW,EAAE;IACX+B,KAAK,EAAE,KAAK;IACZK,MAAM,EAAE,QAAQ,CAAE;EACpB,CAAC;EACDnC,OAAO,EAAE;IACPoC,MAAM,EAAE,gBAAgB;IACxBC,SAAS,EAAE,wBAAwB;IAAE;IACrCb,eAAe,EAAE,SAAS;IAAE;IAC5BC,SAAS,EAAE,OAAO;IAClBa,UAAU,EAAE,KAAK;IACjBX,OAAO,EAAE,KAAK;IACdG,KAAK,EAAE,KAAK;IACZI,YAAY,EAAE,MAAM;IACpBK,SAAS,EAAE;EACb,CAAC;EACDnC,gBAAgB,EAAE;IAChB0B,KAAK,EAAE,KAAK;IACZK,MAAM,EAAE,QAAQ,CAAE;EACpB,CAAC;EACD9B,QAAQ,EAAE;IACRmC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDnC,WAAW,EAAE;IACXkC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDlC,WAAW,EAAE;IACX4B,MAAM,EAAE,CAAC;IACTO,WAAW,EAAE;EACf,CAAC;EACDlC,cAAc,EAAE;IACdmC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE;EACjB,CAAC;EACD5B,QAAQ,EAAE;IACRc,KAAK,EAAE,KAAK;IAAE;IACdK,MAAM,EAAE,QAAQ;IAAE;IAClBD,YAAY,EAAE,MAAM;IACpBP,OAAO,EAAE,MAAM;IACfU,SAAS,EAAE,4BAA4B,CAAE;EAC3C,CAAC;EACDlB,MAAM,EAAE;IACNW,KAAK,EAAE,KAAK;IAAE;IACdK,MAAM,EAAE,QAAQ;IAAE;IAClBF,SAAS,EAAE,QAAQ;IACnBT,eAAe,EAAE,SAAS;IAC1BiB,KAAK,EAAE,MAAM;IACbI,MAAM,EAAE,SAAS;IACjBT,MAAM,EAAE,MAAM;IACdU,YAAY,EAAE;EAChB,CAAC;EACD1B,QAAQ,EAAE;IACRM,QAAQ,EAAE,OAAO;IACjBqB,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,MAAM;IACbxB,eAAe,EAAE,SAAS;IAC1BiB,KAAK,EAAE,MAAM;IACbK,YAAY,EAAE,KAAK;IACnBnB,OAAO,EAAE,MAAM;IACfK,QAAQ,EAAE,MAAM;IAChBa,MAAM,EAAE,SAAS;IACjBR,SAAS,EAAE,4BAA4B;IAAE;IACzCY,UAAU,EAAE;EACd;AACF,CAAC;AAAC,IAAA1B,EAAA;AAAA2B,YAAA,CAAA3B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}