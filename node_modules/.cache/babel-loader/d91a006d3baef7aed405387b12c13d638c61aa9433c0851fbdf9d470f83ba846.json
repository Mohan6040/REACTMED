{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\REACTHOSP\\\\demo\\\\src\\\\doctor\\\\Doctorogin\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport react, { useState, useEffect } from \"react\";\nimport './DoctorLogin.css';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axios from 'axios';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DoctorLogin = () => {\n  _s();\n  const [email, changeemail] = useState(\"\");\n  const [password, changepassword] = useState(\"\");\n  const [role, changerole] = useState(\"\");\n  const [setError, changeError] = useState(null);\n  const navigate = useNavigate(\"\");\n  const [userdetails, ChangeUsrdetails] = useState({\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [onRecaptchaChange, changeonRecaptchaChange] = useState(false);\n  // const [erifyCap,changeerifyCap]=useState(false)\n\n  useEffect(() => {\n    console.log(role, \".........\");\n  }, [onRecaptchaChange, userdetails, email, password, role]);\n  const checkMail = data => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(data);\n    return isValid;\n  };\n\n  // console.log(checkMail(\"doctor@gmail.com\"),\"checking mail\");\n\n  const call = () => {\n    console.log(\"call\");\n    const data = {\n      email: email,\n      password: password,\n      role: \"Doctor\"\n    };\n    console.log(data.role === userdetails.role);\n    console.log(userdetails.role, \"rr\", data.role, \"ttt\");\n    console.log(data.role, \"<\", userdetails.role, \"<\");\n    console.log(userdetails.email, \"rr\", data.email, \"ttt\");\n    console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\n    if (data.role === userdetails.role) {\n      console.log(userdetails.role, \"rr\", data.role, \"ttt\");\n      if (data.email === userdetails.email) {\n        console.log(userdetails.email, \"rr\", data.email, \"ttt\");\n        console.log(data.password, \"pppp\", userdetails.password, \"kkk\");\n        if (data.password === userdetails.password) {\n          navigate(\"/Doctorhome\");\n          //  console.log(\"login successfully\");\n        } else {\n          changeError(\"INVALID PASSWORD\");\n          setTimeout(hideSpam, 1000);\n        }\n      } else {\n        changeError(\"INVALID EMAIL\");\n        setTimeout(hideSpam, 1000);\n      }\n    } else {\n      if (data.role != \"Doctor\") {\n        changeError(\"INVALID ROLE\");\n        setTimeout(hideSpam, 1000);\n      }\n    }\n  };\n  const login = async () => {\n    console.log(\"login\");\n    const data = {\n      email: email,\n      password: password,\n      role: \"Doctor\"\n    };\n    if (onRecaptchaChange) {\n      console.log(checkMail(email));\n      if (checkMail(email)) {\n        if (password.length >= 5) {\n          await axios.post(\"http://localhost:1111/officialEmail/\", data).then(response => {\n            console.log(response.data);\n            changerole(response.data.role);\n            ChangeUsrdetails({\n              email: response.data.email,\n              password: response.data.password,\n              role: response.data.role\n            });\n            call();\n          }).catch(error => {\n            changeError(\"INVALID USER\");\n            setTimeout(hideSpam, 1000);\n            console.error('Error:', error);\n          });\n        } else {\n          // console.log(\"WRONG PASSWORD\");\n          changeError(\"5 CHARACTER NEED PASSWORD\");\n          setTimeout(hideSpam, 1000);\n        }\n      } else {\n        // console.log();\n        changeError(\"ENTER PROPER EMAIL\");\n        setTimeout(hideSpam, 1000);\n      }\n    } else {\n      changeError(\"VERIFY CAPTCHA\");\n      setTimeout(hideSpam, 1000);\n    }\n  };\n  const hideSpam = () => {\n    // setShowSpam(false);\n    changeError(null);\n  };\n\n  // Set a timeout to hide the spam message after 5 seconds\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lcontainer4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => changeemail(e.target.value),\n          placeholder: \"Enter value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Password\",\n          value: password,\n          onChange: e => changepassword(e.target.value),\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/DoctorForgotPassword\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"fpass\",\n            children: \"forgot password ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          className: \"ReCAPTCHA\",\n          sitekey: \"6Lf7eyQpAAAAABP44pO0L6bvtrOV5FnLLk1kGIrR\",\n          onChange: () => changeonRecaptchaChange(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/DoctorRegister\",\n              style: {\n                textDecoration: 'underline'\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), setError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: setError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(DoctorLogin, \"bb6U1JKy0/wED0baGamr9LWwmK4=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorLogin;\nvar _c;\n$RefreshReg$(_c, \"DoctorLogin\");","map":{"version":3,"names":["react","useState","useEffect","ReCAPTCHA","axios","Routes","Route","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorLogin","_s","email","changeemail","password","changepassword","role","changerole","setError","changeError","navigate","userdetails","ChangeUsrdetails","onRecaptchaChange","changeonRecaptchaChange","console","log","checkMail","data","emailRegex","isValid","test","call","setTimeout","hideSpam","login","length","post","then","response","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","to","sitekey","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/REACTHOSP/demo/src/doctor/Doctorogin/DoctorLogin.js"],"sourcesContent":["import react ,{useState,useEffect}from \"react\"\r\nimport './DoctorLogin.css'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from 'axios'\r\nimport {Routes,Route,Link} from \"react-router-dom\"\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nexport const DoctorLogin=()=>{\r\n    const [email,changeemail]=useState(\"\")\r\n    const [password,changepassword]=useState(\"\")\r\n    const [role,changerole]=useState(\"\")\r\n    const [setError,changeError]=useState(null)\r\n    const navigate = useNavigate(\"\")\r\n    const [userdetails,ChangeUsrdetails]=useState({email:\"\",\r\n                                                   password:\"\",\r\n                                                   role :\"\"})\r\n    const [onRecaptchaChange,changeonRecaptchaChange]=useState(false)\r\n    // const [erifyCap,changeerifyCap]=useState(false)\r\n    \r\n    useEffect(()=>{\r\n        console.log(role,\".........\");\r\n    },[onRecaptchaChange,userdetails,email,password,role])\r\n    \r\n    const checkMail=(data)=>{\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const isValid = emailRegex.test(data);\r\n    return isValid\r\n    }\r\n\r\n    // console.log(checkMail(\"doctor@gmail.com\"),\"checking mail\");\r\n\r\n\r\n    const call =()=>{\r\n        console.log(\"call\");\r\n        const data={\r\n            email: email,\r\n            password:password,\r\n            role:\"Doctor\"\r\n        }\r\n         console.log(data.role===userdetails.role);\r\n         console.log(userdetails.role,\"rr\",data.role,\"ttt\");\r\n         console.log(data.role,\"<\",userdetails.role,\"<\");\r\n         console.log(userdetails.email,\"rr\",data.email,\"ttt\");\r\n         console.log(data.password,\"pppp\",userdetails.password,\"kkk\");\r\n        if (data.role===userdetails.role) {\r\n            console.log(userdetails.role,\"rr\",data.role,\"ttt\");\r\n            if (data.email===userdetails.email) {\r\n                console.log(userdetails.email,\"rr\",data.email,\"ttt\");\r\n                console.log(data.password,\"pppp\",userdetails.password,\"kkk\");\r\n                if (data.password===userdetails.password) {\r\n\r\n                    navigate(\"/Doctorhome\")\r\n                //  console.log(\"login successfully\");\r\n                }else{\r\n                    changeError(\"INVALID PASSWORD\") \r\n            setTimeout(hideSpam, 1000);\r\n                }\r\n            \r\n            }else{\r\n                changeError(\"INVALID EMAIL\") \r\n            setTimeout(hideSpam, 1000);\r\n            }\r\n    \r\n            \r\n        }else{\r\n            if (data.role!=\"Doctor\") {\r\n                changeError(\"INVALID ROLE\") \r\n                setTimeout(hideSpam, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const login=async()=>{\r\n\r\n\r\n        console.log(\"login\");\r\n\r\n        const data={\r\n            email: email,\r\n            password:password,\r\n            role:\"Doctor\"\r\n        }\r\n\r\n        if (onRecaptchaChange) {\r\n            console.log(checkMail(email));\r\n            if (checkMail(email)) {\r\n                \r\n                if (password.length>=5) {\r\n                 \r\n                  await  axios.post(\"http://localhost:1111/officialEmail/\",data).then(response => {\r\n                        console.log(response.data);\r\n                        changerole(response.data.role)\r\n                     ChangeUsrdetails({email:response.data.email,\r\n                        password:response.data.password,\r\n                        role :response.data.role})\r\n                        call()\r\n                        \r\n                      })\r\n                      .catch(error => {\r\n                        changeError(\"INVALID USER\") \r\n                    setTimeout(hideSpam, 1000);\r\n                        console.error('Error:', error);\r\n                      });\r\n                }else{\r\n                    // console.log(\"WRONG PASSWORD\");\r\n                    changeError(\"5 CHARACTER NEED PASSWORD\") \r\n                    setTimeout(hideSpam, 1000);\r\n              \r\n                }\r\n            \r\n            }else{\r\n                // console.log();\r\n                changeError(\"ENTER PROPER EMAIL\") \r\n                setTimeout(hideSpam, 1000);\r\n          \r\n            }\r\n    \r\n            \r\n        }else{\r\n            changeError(\"VERIFY CAPTCHA\") \r\n      setTimeout(hideSpam, 1000);\r\n\r\n\r\n        }\r\n\r\n\r\n      \r\n    }\r\n\r\n    const hideSpam = () => {\r\n        // setShowSpam(false);\r\n        changeError(null) \r\n\r\n      };\r\n    \r\n      // Set a timeout to hide the spam message after 5 seconds\r\n    \r\n    \r\n    return <>\r\n        <div  className=\"lcontainer4\">\r\n     \r\n        <div className=\"login\">\r\n        <h1>LOGIN</h1>\r\n\r\n            <p>Email</p>\r\n            <input type=\"email\"\r\n            value={email}\r\n            onChange={e=>changeemail(e.target.value)}\r\n            placeholder=\"Enter value\"\r\n            ></input>\r\n\r\n            <p >Password</p>\r\n            <input type=\"Password\"\r\n            value={password}\r\n            onChange={e=>changepassword(e.target.value)}\r\n            placeholder=\"Enter Password\"\r\n            ></input>\r\n            <br></br><br></br>\r\n            <Link to=\"/DoctorForgotPassword\">\r\n            <p className=\"fpass\">forgot password ?</p>\r\n            </Link>\r\n            <ReCAPTCHA className=\"ReCAPTCHA\" sitekey=\"6Lf7eyQpAAAAABP44pO0L6bvtrOV5FnLLk1kGIrR\" onChange={()=>changeonRecaptchaChange(true)} />\r\n               \r\n               <br></br>\r\n            <div className=\"div1\">\r\n               \r\n               <button onClick={login}>Login</button>\r\n        \r\n               <br></br><br></br>\r\n               <p>\r\n               Don't have an account?{' '}\r\n               <Link to=\"/DoctorRegister\" style={{ textDecoration: 'underline' }}> \r\n               Register\r\n             </Link>\r\n             </p>\r\n                \r\n            </div>\r\n        {setError?<p className=\"error\">{setError}</p>:null}\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n    </>\r\n   \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAM,OAAO;AAC9C,OAAO,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAACC,KAAK,EAACC,IAAI,QAAO,kBAAkB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG9C,OAAO,MAAMC,WAAW,GAACA,CAAA,KAAI;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAACC,WAAW,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAACC,cAAc,CAAC,GAACjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,IAAI,EAACC,UAAU,CAAC,GAACnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,QAAQ,EAACC,WAAW,CAAC,GAACrB,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAMsB,QAAQ,GAAGf,WAAW,CAAC,EAAE,CAAC;EAChC,MAAM,CAACgB,WAAW,EAACC,gBAAgB,CAAC,GAACxB,QAAQ,CAAC;IAACc,KAAK,EAAC,EAAE;IACRE,QAAQ,EAAC,EAAE;IACXE,IAAI,EAAE;EAAE,CAAC,CAAC;EACzD,MAAM,CAACO,iBAAiB,EAACC,uBAAuB,CAAC,GAAC1B,QAAQ,CAAC,KAAK,CAAC;EACjE;;EAEAC,SAAS,CAAC,MAAI;IACV0B,OAAO,CAACC,GAAG,CAACV,IAAI,EAAC,WAAW,CAAC;EACjC,CAAC,EAAC,CAACO,iBAAiB,EAACF,WAAW,EAACT,KAAK,EAACE,QAAQ,EAACE,IAAI,CAAC,CAAC;EAEtD,MAAMW,SAAS,GAAEC,IAAI,IAAG;IACxB,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,MAAMC,OAAO,GAAGD,UAAU,CAACE,IAAI,CAACH,IAAI,CAAC;IACrC,OAAOE,OAAO;EACd,CAAC;;EAED;;EAGA,MAAME,IAAI,GAAEA,CAAA,KAAI;IACZP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAME,IAAI,GAAC;MACPhB,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAACA,QAAQ;MACjBE,IAAI,EAAC;IACT,CAAC;IACAS,OAAO,CAACC,GAAG,CAACE,IAAI,CAACZ,IAAI,KAAGK,WAAW,CAACL,IAAI,CAAC;IACzCS,OAAO,CAACC,GAAG,CAACL,WAAW,CAACL,IAAI,EAAC,IAAI,EAACY,IAAI,CAACZ,IAAI,EAAC,KAAK,CAAC;IAClDS,OAAO,CAACC,GAAG,CAACE,IAAI,CAACZ,IAAI,EAAC,GAAG,EAACK,WAAW,CAACL,IAAI,EAAC,GAAG,CAAC;IAC/CS,OAAO,CAACC,GAAG,CAACL,WAAW,CAACT,KAAK,EAAC,IAAI,EAACgB,IAAI,CAAChB,KAAK,EAAC,KAAK,CAAC;IACpDa,OAAO,CAACC,GAAG,CAACE,IAAI,CAACd,QAAQ,EAAC,MAAM,EAACO,WAAW,CAACP,QAAQ,EAAC,KAAK,CAAC;IAC7D,IAAIc,IAAI,CAACZ,IAAI,KAAGK,WAAW,CAACL,IAAI,EAAE;MAC9BS,OAAO,CAACC,GAAG,CAACL,WAAW,CAACL,IAAI,EAAC,IAAI,EAACY,IAAI,CAACZ,IAAI,EAAC,KAAK,CAAC;MAClD,IAAIY,IAAI,CAAChB,KAAK,KAAGS,WAAW,CAACT,KAAK,EAAE;QAChCa,OAAO,CAACC,GAAG,CAACL,WAAW,CAACT,KAAK,EAAC,IAAI,EAACgB,IAAI,CAAChB,KAAK,EAAC,KAAK,CAAC;QACpDa,OAAO,CAACC,GAAG,CAACE,IAAI,CAACd,QAAQ,EAAC,MAAM,EAACO,WAAW,CAACP,QAAQ,EAAC,KAAK,CAAC;QAC5D,IAAIc,IAAI,CAACd,QAAQ,KAAGO,WAAW,CAACP,QAAQ,EAAE;UAEtCM,QAAQ,CAAC,aAAa,CAAC;UAC3B;QACA,CAAC,MAAI;UACDD,WAAW,CAAC,kBAAkB,CAAC;UACvCc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;QACtB;MAEJ,CAAC,MAAI;QACDf,WAAW,CAAC,eAAe,CAAC;QAChCc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;MAC1B;IAGJ,CAAC,MAAI;MACD,IAAIN,IAAI,CAACZ,IAAI,IAAE,QAAQ,EAAE;QACrBG,WAAW,CAAC,cAAc,CAAC;QAC3Bc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;MAC9B;IACJ;EACJ,CAAC;EAGD,MAAMC,KAAK,GAAC,MAAAA,CAAA,KAAS;IAGjBV,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAEpB,MAAME,IAAI,GAAC;MACPhB,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAACA,QAAQ;MACjBE,IAAI,EAAC;IACT,CAAC;IAED,IAAIO,iBAAiB,EAAE;MACnBE,OAAO,CAACC,GAAG,CAACC,SAAS,CAACf,KAAK,CAAC,CAAC;MAC7B,IAAIe,SAAS,CAACf,KAAK,CAAC,EAAE;QAElB,IAAIE,QAAQ,CAACsB,MAAM,IAAE,CAAC,EAAE;UAEtB,MAAOnC,KAAK,CAACoC,IAAI,CAAC,sCAAsC,EAACT,IAAI,CAAC,CAACU,IAAI,CAACC,QAAQ,IAAI;YAC1Ed,OAAO,CAACC,GAAG,CAACa,QAAQ,CAACX,IAAI,CAAC;YAC1BX,UAAU,CAACsB,QAAQ,CAACX,IAAI,CAACZ,IAAI,CAAC;YACjCM,gBAAgB,CAAC;cAACV,KAAK,EAAC2B,QAAQ,CAACX,IAAI,CAAChB,KAAK;cACxCE,QAAQ,EAACyB,QAAQ,CAACX,IAAI,CAACd,QAAQ;cAC/BE,IAAI,EAAEuB,QAAQ,CAACX,IAAI,CAACZ;YAAI,CAAC,CAAC;YAC1BgB,IAAI,CAAC,CAAC;UAER,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;YACdtB,WAAW,CAAC,cAAc,CAAC;YAC/Bc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;YACtBT,OAAO,CAACgB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAChC,CAAC,CAAC;QACR,CAAC,MAAI;UACD;UACAtB,WAAW,CAAC,2BAA2B,CAAC;UACxCc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;QAE9B;MAEJ,CAAC,MAAI;QACD;QACAf,WAAW,CAAC,oBAAoB,CAAC;QACjCc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;MAE9B;IAGJ,CAAC,MAAI;MACDf,WAAW,CAAC,gBAAgB,CAAC;MACnCc,UAAU,CAACC,QAAQ,EAAE,IAAI,CAAC;IAGxB;EAIJ,CAAC;EAED,MAAMA,QAAQ,GAAGA,CAAA,KAAM;IACnB;IACAf,WAAW,CAAC,IAAI,CAAC;EAEnB,CAAC;;EAED;;EAGF,oBAAOZ,OAAA,CAAAE,SAAA;IAAAiC,QAAA,eACHnC,OAAA;MAAMoC,SAAS,EAAC,aAAa;MAAAD,QAAA,eAE7BnC,OAAA;QAAKoC,SAAS,EAAC,OAAO;QAAAD,QAAA,gBACtBnC,OAAA;UAAAmC,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEVxC,OAAA;UAAAmC,QAAA,EAAG;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACZxC,OAAA;UAAOyC,IAAI,EAAC,OAAO;UACnBC,KAAK,EAAErC,KAAM;UACbsC,QAAQ,EAAEC,CAAC,IAAEtC,WAAW,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACzCI,WAAW,EAAC;QAAa;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eAETxC,OAAA;UAAAmC,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChBxC,OAAA;UAAOyC,IAAI,EAAC,UAAU;UACtBC,KAAK,EAAEnC,QAAS;UAChBoC,QAAQ,EAAEC,CAAC,IAAEpC,cAAc,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,WAAW,EAAC;QAAgB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACTxC,OAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAxC,OAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClBxC,OAAA,CAACH,IAAI;UAACkD,EAAE,EAAC,uBAAuB;UAAAZ,QAAA,eAChCnC,OAAA;YAAGoC,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACPxC,OAAA,CAACP,SAAS;UAAC2C,SAAS,EAAC,WAAW;UAACY,OAAO,EAAC,0CAA0C;UAACL,QAAQ,EAAEA,CAAA,KAAI1B,uBAAuB,CAAC,IAAI;QAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhIxC,OAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACZxC,OAAA;UAAKoC,SAAS,EAAC,MAAM;UAAAD,QAAA,gBAElBnC,OAAA;YAAQiD,OAAO,EAAErB,KAAM;YAAAO,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAEtCxC,OAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAAxC,OAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClBxC,OAAA;YAAAmC,QAAA,GAAG,wBACmB,EAAC,GAAG,eAC1BnC,OAAA,CAACH,IAAI;cAACkD,EAAE,EAAC,iBAAiB;cAACG,KAAK,EAAE;gBAAEC,cAAc,EAAE;cAAY,CAAE;cAAAhB,QAAA,EAAC;YAErE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEA,CAAC,EACT7B,QAAQ,gBAACX,OAAA;UAAGoC,SAAS,EAAC,OAAO;UAAAD,QAAA,EAAExB;QAAQ;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAC,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAApC,EAAA,CAnLYD,WAAW;EAAA,QAKHL,WAAW;AAAA;AAAAsD,EAAA,GALnBjD,WAAW;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}