{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\0000\\\\Downloads\\\\Mern-food\\\\frontend\\\\demo\\\\src\\\\doctor\\\\Doctorhome\\\\doctorhome.js\",\n  _s = $RefreshSig$();\n// Chat.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  messages,\n  onSendMessage\n}) => {\n  _s();\n  const [newMessage, setNewMessage] = useState('');\n  const handleSendMessage = () => {\n    onSendMessage(newMessage);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.messagesContainer,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: message.role === 'patient' ? styles.patientMessage : styles.doctorMessage,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        style: styles.input,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: styles.button,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"S8T8IanT+NqDFdZEucOF8E5gItw=\");\n_c = Chat;\nconst styles = {\n  messagesContainer: {\n    minHeight: '200px',\n    marginBottom: '10px',\n    overflowY: 'auto'\n  },\n  doctorMessage: {\n    background: '#4CAF50',\n    // Green background color for doctor's messages\n    color: '#fff',\n    padding: '8px',\n    borderRadius: '5px',\n    marginBottom: '8px'\n  },\n  patientMessage: {\n    background: '#2196F3',\n    // Blue background color for patient's messages\n    color: '#fff',\n    padding: '8px',\n    borderRadius: '5px',\n    marginBottom: '8px'\n  },\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    padding: '8px',\n    marginRight: '8px',\n    borderRadius: '5px',\n    border: '1px solid #ccc'\n  },\n  button: {\n    padding: '8px 12px',\n    borderRadius: '5px',\n    background: '#4CAF50',\n    // Green button color\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","messages","onSendMessage","_s","newMessage","setNewMessage","handleSendMessage","children","style","styles","messagesContainer","map","message","index","role","patientMessage","doctorMessage","text","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","value","onChange","e","target","input","placeholder","onClick","button","_c","minHeight","marginBottom","overflowY","background","color","padding","borderRadius","display","alignItems","flex","marginRight","border","cursor","$RefreshReg$"],"sources":["C:/Users/0000/Downloads/Mern-food/frontend/demo/src/doctor/Doctorhome/doctorhome.js"],"sourcesContent":["// Chat.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Chat = ({ messages, onSendMessage }) => {\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    onSendMessage(newMessage);\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={styles.messagesContainer}>\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            style={message.role === 'patient' ? styles.patientMessage : styles.doctorMessage}\r\n          >\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={styles.inputContainer}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          style={styles.input}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendMessage} style={styles.button}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  messagesContainer: {\r\n    minHeight: '200px',\r\n    marginBottom: '10px',\r\n    overflowY: 'auto',\r\n  },\r\n  doctorMessage: {\r\n    background: '#4CAF50', // Green background color for doctor's messages\r\n    color: '#fff',\r\n    padding: '8px',\r\n    borderRadius: '5px',\r\n    marginBottom: '8px',\r\n  },\r\n  patientMessage: {\r\n    background: '#2196F3', // Blue background color for patient's messages\r\n    color: '#fff',\r\n    padding: '8px',\r\n    borderRadius: '5px',\r\n    marginBottom: '8px',\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '8px',\r\n    marginRight: '8px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n  },\r\n  button: {\r\n    padding: '8px 12px',\r\n    borderRadius: '5px',\r\n    background: '#4CAF50', // Green button color\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}